---
# tasks file for dbbackup

- name: Install pip
  apt:
    update_cache: yes
    name: python-pip
    state: present
  when: db_backup_enabled
  tags:
    - pip

- name: Install s3cmd via pip
  pip:
    name: s3cmd
    state: latest
  when: db_backup_enabled
  tags:
    - pip-packages

- name: Place S3 config file
  template:
    src: "s3cfg.j2"
    dest: "~/.s3cfg"
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0600
  become: true
  become_user: "{{ db_backup_user }}"
  when: db_backup_enabled
  tags:
    - s3-configs
    - configs

- name: Make sure the script directory exist
  file:
    path: "{{ db_backup_script_dir }}"
    state: directory
    recurse: yes
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0750
  when: db_backup_enabled

- name: Make sure the script config directory exist
  file:
    path: "{{ db_backup_script_dir }}/conf.d"
    state: directory
    recurse: yes
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0750
  when: db_backup_enabled

- name: Make sure the script log directory exist at {{ db_backup_log_dir }}
  file:
    path: "{{ db_backup_log_dir }}"
    state: directory
    recurse: yes
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0755
  when: db_backup_enabled

- name: Put the DB backup script
  template:
    src: db_backup.sh.j2
    dest: "{{ db_backup_script_dir }}/db_backup.sh"
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0750
  when: db_backup_enabled
  tags:
    - backup-script

- name: Set up specific DB backup configs
  include_tasks: setup-backup-job.yml
  loop: '{{ db_backup_list }}'
  when: db_backup_enabled
  tags:
    - db_backup_configs


