---
# tasks file for dbbackup

- set_fact:
    db_backup_configs_name: "{{ item.keys() | first }}"
    db_backup_configs: "{{ item[ item.keys() | first ] }}"
  tags:
    - db_backup_script
    - configs
    - db_backup_configs

- name: Set hostname for DB backup path
  set_fact:
    server_hostname: "{{ inventory_hostname }}"
    # server_hostname: "{{ server_hostname | inventory_hostname }}"

- name: Ensure the DB backup directory exist for {{ db_backup_configs_name }}
  file:
    path: "{{ db_backup_configs['db_backup_local_backup_path'] }}"
    state: directory
    recurse: yes
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0750

- name: Put the db backup configuration for {{ db_backup_configs_name }}
  template:
    src: db_backup.conf.j2
    dest: "{{ db_backup_script_dir }}/conf.d/{{ db_backup_configs_name }}"
    owner: "{{ db_backup_user }}"
    group: "{{ db_backup_group }}"
    mode: 0440
  tags:
    - db_backup_script
    - configs
    - db_backup_configs

- name: Schedule DB backup cron for {{ db_backup_configs_name }}
  cron:
    name: "DB Backup cron - {{ db_backup_configs_name }}"
    hour: "1"
    minute: "15"
    job: "/bin/bash {{ db_backup_script_dir }}/db_backup.sh {{ db_backup_script_dir }}/conf.d/{{ db_backup_configs_name }} >> {{ db_backup_log_dir}}/db_backup_out.log 2>> {{ db_backup_log_dir}}/db_backup_err.log"
    user: "{{ db_backup_user }}"
    state: present
  tags:
    - db_backup_script
    - configs
    - db_backup_configs

